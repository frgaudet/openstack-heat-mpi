heat_template_version: 2013-05-23

description: Template that installs a cluster of MPI servers.

parameters:
  count:
    description: Number of MPI nodes
    type: number
    default: 3
  key_name:
    type: string
    description: Name of key-pair to be used
  flavor:
    type: string
    default: m1.small
    constraints:
    - allowed_values:
      - m1.small
      - m1.large
      - m1.xlarge
      - m1.xxlarge
      description: |
        Choose an instance flavor
  image_id:
    type: string
    label: Server image
  net_id:
    type: string
    label: Network ID
    description: ID of the public network to use
  name:
    type: string
    description: Name of each MPI machine booted
  public_network:
    type: string
    description: Public network id
    default: ext-net
  private_key:
    type: string
    description: Name of private key to be used for the local MPI user
    default: []
    hidden: true
  public_key:
    type: string
    description: Name of plublic key to be used for the local MPI user
    default: []
    hidden: true
      
resources:
  my_key:
    properties:
      name: my_key
      save_private_key: true
    type: OS::Nova::KeyPair

  mpi_cluster:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: count}
      resource_def:
        type: Lib::MSG::MPINode
        properties:
          image_id: { get_param: image_id }
          flavor: { get_param: flavor }
          key_name: { get_param: key_name }
          net_id: { get_param: net_id }
          public_key: { get_attr: [ my_key, public_key ]  }
          private_key: { get_attr: [ my_key, private_key ] }
          name:
            str_replace:
              template:
                $name-$index
              params:
                $name: { get_param: name }
                $index: "%index%"


  mpi_master:
    type: Lib::MSG::MPIMaster
    depends_on: mpi_cluster
    properties:
      image_id: { get_param: image_id }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      net_id: { get_param: net_id }
      servers: { get_attr: [mpi_cluster, node_param] }
      private_key: { get_attr: [ my_key, private_key ] }
      public_key: { get_attr: [ my_key, public_key ]  }
      name: { get_param: name }
      public_network: { get_param: public_network }

outputs:
    public_ip:
      description: The public IP address of this mpi cluster.
      value: { get_attr: [mpi_master, ip] }